{"ast":null,"code":"import axios from 'axios';\n// Create an instance of Axios\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:5000' // Replace with your API base URL\n});\n\n// Request interceptor\naxiosInstance.interceptors.request.use(config => {\n  // Add any headers or other configurations here\n  // For example, adding an Authorization token\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['x-access-token'] = `${token}`; //Bearer \n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\naxiosInstance.interceptors.response.use(response => {\n  // Handle successful responses\n  return response;\n}, error => {\n  // Handle errors\n  // For example, you can handle unauthorized access globally\n  if (error.response && error.response.status === 401) {\n    // Redirect to login or handle unauthorized access\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","status"],"sources":["C:/Users/Bharat/OneDrive/Desktop/project_live/project_live/src/component/common/axiosInstance.js"],"sourcesContent":["import axios from 'axios';\r\n// Create an instance of Axios\r\nconst axiosInstance = axios.create({\r\n  baseURL: 'http://localhost:5000', // Replace with your API base URL\r\n});\r\n\r\n// Request interceptor\r\naxiosInstance.interceptors.request.use(\r\n  config => {\r\n    // Add any headers or other configurations here\r\n    // For example, adding an Authorization token\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['x-access-token'] = `${token}`; //Bearer \r\n    }\r\n\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  response => {\r\n    // Handle successful responses\r\n    return response;\r\n  },\r\n  error => {\r\n    // Handle errors\r\n    // For example, you can handle unauthorized access globally\r\n    if (error.response && error.response.status === 401) {\r\n      // Redirect to login or handle unauthorized access\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,uBAAuB,CAAE;AACpC,CAAC,CAAC;;AAEF;AACAF,aAAa,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACpCC,MAAM,IAAI;EACR;EACA;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAAC,gBAAgB,CAAC,GAAG,GAAGH,KAAK,EAAE,CAAC,CAAC;EACjD;EAEA,OAAOD,MAAM;AACf,CAAC,EACDK,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,aAAa,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CACrCS,QAAQ,IAAI;EACV;EACA,OAAOA,QAAQ;AACjB,CAAC,EACDH,KAAK,IAAI;EACP;EACA;EACA,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;EAAA;EAEF,OAAOH,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}